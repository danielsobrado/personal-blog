<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Functional Programming on </title>
    <link>https://www.danielsobrado.com/tags/functional-programming/</link>
    <description>Recent content in Functional Programming on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://www.danielsobrado.com/tags/functional-programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Applicative and Other Functional Concepts</title>
      <link>https://www.danielsobrado.com/blog/applicative-and-other-functional-concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/applicative-and-other-functional-concepts/</guid>
      <description>Applicative Functors Applicative functors, or simply applicatives, are a powerful concept in functional programming.</description>
    </item>
    
    <item>
      <title>Back-Pressure and Error Handling in Reactor</title>
      <link>https://www.danielsobrado.com/blog/back-pressure-and-error-handling-in-reactor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/back-pressure-and-error-handling-in-reactor/</guid>
      <description>Back-Pressure Back-pressure is a mechanism in reactive systems that allows the consumer of data to signal to the producer that it is unable to handle the current rate of data production.</description>
    </item>
    
    <item>
      <title>Building RESTful APIs with WebFlux</title>
      <link>https://www.danielsobrado.com/blog/building-restful-apis-with-webflux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/building-restful-apis-with-webflux/</guid>
      <description>Introduction to Spring WebFlux Spring WebFlux is part of the Spring Framework and provides support for reactive programming in web applications.</description>
    </item>
    
    <item>
      <title>Currying in Java: Transforming Functions for Flexibility and Reusability</title>
      <link>https://www.danielsobrado.com/blog/currying/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/currying/</guid>
      <description>Introduction In functional programming, currying is a technique that transforms a function with multiple arguments into a sequence of functions, each taking a single argument.</description>
    </item>
    
    <item>
      <title>Functional Error Handling in Vavr</title>
      <link>https://www.danielsobrado.com/blog/functional-error-handling-in-vavr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/functional-error-handling-in-vavr/</guid>
      <description>The Problem with Exceptions Exceptions are the traditional way of handling errors in Java.</description>
    </item>
    
    <item>
      <title>Functional Programming Best Practices in Java</title>
      <link>https://www.danielsobrado.com/blog/functional-programming-best-practices-in-java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/functional-programming-best-practices-in-java/</guid>
      <description>1. Favor Immutability One of the core principles of functional programming is immutability.</description>
    </item>
    
    <item>
      <title>Functional programming in Java: Functional Interfaces</title>
      <link>https://www.danielsobrado.com/blog/functional-java-functional-interfaces/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/functional-java-functional-interfaces/</guid>
      <description>Introduction With Java 8, Oracle introduced functional programming in the language, this is achieved by using Functional Interfaces.</description>
    </item>
    
    <item>
      <title>Lambda Expressions</title>
      <link>https://www.danielsobrado.com/blog/functional-java-lambda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/functional-java-lambda/</guid>
      <description>What are Lambda Expressions? A lambda expression is a simple way to represent an anonymous function in Java.</description>
    </item>
    
  </channel>
</rss>
