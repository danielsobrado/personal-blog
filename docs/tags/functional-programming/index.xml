<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Functional Programming on </title>
    <link>https://www.danielsobrado.com/tags/functional-programming/</link>
    <description>Recent content in Functional Programming on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Wed, 08 Jan 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.danielsobrado.com/tags/functional-programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Functional Programming Basic Concepts</title>
      <link>https://www.danielsobrado.com/post/functional-programming-basic-concepts/</link>
      <pubDate>Wed, 08 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/post/functional-programming-basic-concepts/</guid>
      <description>1. Introduction Functional programming is a programming paradigm, based on some principles
2. Advantages 3. Concepts LetÂ´s enumerate and describe the main pillars of functional programming, each one deserves several separated articles:
3.1 Pure functions and Referential Transparency We want to make sure that a function will perform the same actions and give the same results for the same inputs.
We call these functions stateless functions.
 An expression is referentially transparent if it can be replaced with its value without changing the program behavior.</description>
    </item>
    
    <item>
      <title>Functional programming in Java: Lambdas</title>
      <link>https://www.danielsobrado.com/post/functional-programming-in-java-lambdas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/post/functional-programming-in-java-lambdas/</guid>
      <description>Introduction A lambda expression in
Concepts Functional interface: Is an interface that declares one abstract method.
Target type: The type expected by a lambda expression.</description>
    </item>
    
  </channel>
</rss>