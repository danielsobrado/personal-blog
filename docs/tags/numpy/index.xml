<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Numpy on </title>
    <link>https://www.danielsobrado.com/tags/numpy/</link>
    <description>Recent content in Numpy on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Mon, 29 Feb 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.danielsobrado.com/tags/numpy/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Numpy: ndarrays</title>
      <link>https://www.danielsobrado.com/post/numpy-ndarrays/</link>
      <pubDate>Mon, 29 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/post/numpy-ndarrays/</guid>
      <description>Creating ndarrays We can get Numpy vector and a matrix rapidly from a Python list:
vector = np.array([1,2,3,4]) vector Output: $ array([1, 2, 3, 4])  matrix = vector.reshape((2,2)) matrix Output: $ array([[1, 2], [3, 4]])   We can quickly create matrices of ones and zeros:
all_zeros = np.zeros((3,3)) all_zeros Output: $ array([[0., 0., 0.], [0., 0., 0.], [0., 0., 0.]])  all_ones = np.ones((3,3)) all_ones Output: $ array([[1.</description>
    </item>
    
    <item>
      <title>Numpy: Introduction</title>
      <link>https://www.danielsobrado.com/post/numpy-introduction/</link>
      <pubDate>Sun, 28 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/post/numpy-introduction/</guid>
      <description>Introduction Numpy is the core package for scientific computing, it has capabilities for fast processing of n-dimensional arrays and in general linear algebra.
There are multiple other well known packages in data science that rely on Numpy like Pandas and Scipy.
Installing Numpy For the examples we´ll just use pip to install Numpy, ideally it will be inside a container like Anaconda:
$ pip install numpy  Numpy Arrays ndarray is the earth of NumPy, it&amp;rsquo;s the main data storage object of the framework.</description>
    </item>
    
    <item>
      <title>Numpy: Doing some maths</title>
      <link>https://www.danielsobrado.com/post/numpy-doing-some-maths/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/post/numpy-doing-some-maths/</guid>
      <description> Linear Algrebra Matrix object This object is always two dimensional, and it doesn´t use the default broadcasting from ndarray.
We can create an identity matrix using np.eye:
identity = np.eye(3) identity Output: $ array([[ 1., 0., 0.], $ [ 0., 1., 0.], $ [ 0., 0., 1.]]) 
array([[ 1., 0., 0.], [ 0., 1., 0.], [ 0., 0., 1.]])
Statistics Reading and writing </description>
    </item>
    
  </channel>
</rss>