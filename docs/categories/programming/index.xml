<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on </title>
    <link>https://www.danielsobrado.com/categories/programming/</link>
    <description>Recent content in Programming on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 08 Mar 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://www.danielsobrado.com/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Zero-Copy and the transferTo() Method in Java</title>
      <link>https://www.danielsobrado.com/blog/zero-copy/</link>
      <pubDate>Fri, 08 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/zero-copy/</guid>
      <description>Understanding Zero-Copy and the transferTo() Method in Java One technique that helps optimize data transfer is called &amp;ldquo;zero-copy.</description>
    </item>
    
    <item>
      <title>Inter-process Communication IPC</title>
      <link>https://www.danielsobrado.com/blog/inter-process-communication/</link>
      <pubDate>Mon, 21 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/inter-process-communication/</guid>
      <description>Inter-process communication (IPC) refers to the mechanisms and techniques used for exchanging data and synchronizing actions between processes.</description>
    </item>
    
    <item>
      <title>Basic Synchronization Mechanisms</title>
      <link>https://www.danielsobrado.com/blog/basic-synchronization-mechanisms/</link>
      <pubDate>Wed, 16 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/basic-synchronization-mechanisms/</guid>
      <description>Locks Locks are a fundamental synchronization mechanism that allows exclusive access to a shared resource.</description>
    </item>
    
    <item>
      <title>Introduction to Concurrency</title>
      <link>https://www.danielsobrado.com/blog/introduction-to-concurrency/</link>
      <pubDate>Tue, 01 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/introduction-to-concurrency/</guid>
      <description>Concurrency in programming refers to the execution of multiple tasks or processes at the same time but not necessarily simultaneously.</description>
    </item>
    
    <item>
      <title>Introducing Ray</title>
      <link>https://www.danielsobrado.com/blog/introducing-ray/</link>
      <pubDate>Sat, 20 Feb 2021 15:30:02 +0400</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/introducing-ray/</guid>
      <description>Recently I had a request to match some counterparty names from different files.</description>
    </item>
    
    <item>
      <title>Installing Kerberos</title>
      <link>https://www.danielsobrado.com/blog/installing-kerberos/</link>
      <pubDate>Tue, 12 Jan 2021 14:31:02 +0400</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/installing-kerberos/</guid>
      <description>Kerberos is a ticket-based authentication protocol that allows us to communicate with each other.</description>
    </item>
    
    <item>
      <title>Introduction to REST API</title>
      <link>https://www.danielsobrado.com/blog/introduction-rest-api/</link>
      <pubDate>Wed, 09 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/introduction-rest-api/</guid>
      <description>Introduction to REST API REST (Representational State Transfer) is an architectural style for building web services.</description>
    </item>
    
    <item>
      <title>Prefix Sum Pattern</title>
      <link>https://www.danielsobrado.com/blog/prefix-sum-dsa-pattern/</link>
      <pubDate>Mon, 21 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/prefix-sum-dsa-pattern/</guid>
      <description>The Two Pointers Pattern Hey there, coding interview warriors! Ready to add another powerful weapon to your algorithmic arsenal?</description>
    </item>
    
    <item>
      <title>2 Pointers Pattern</title>
      <link>https://www.danielsobrado.com/blog/two-pointer-dsa-pattern/</link>
      <pubDate>Thu, 17 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/two-pointer-dsa-pattern/</guid>
      <description>The Two Pointers Pattern Hey there, coding interview warriors! Ready to add another powerful weapon to your algorithmic arsenal?</description>
    </item>
    
    <item>
      <title>ACID Properties</title>
      <link>https://www.danielsobrado.com/blog/acid/</link>
      <pubDate>Sun, 15 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/acid/</guid>
      <description>In 1983, Andreas Reuter and Theo Härder published the paper “Principles of Transaction-Oriented Database Recovery”, and minted the term ACID.</description>
    </item>
    
    <item>
      <title>CRUD vs CQRS: Exploring the Differences and Benefits</title>
      <link>https://www.danielsobrado.com/blog/crud-cqrs/</link>
      <pubDate>Thu, 12 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/crud-cqrs/</guid>
      <description>CRUD: Create, Read, Update, Delete CRUD is a traditional approach to designing systems where a single model is used for both reading and writing data.</description>
    </item>
    
    <item>
      <title>Numpy: ndarrays</title>
      <link>https://www.danielsobrado.com/blog/numpy-ndarrays/</link>
      <pubDate>Mon, 29 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/numpy-ndarrays/</guid>
      <description>Numpy lets us create arrays in multiple ways, most of the time in consonancy with core Python and other libraries like Pandas.</description>
    </item>
    
    <item>
      <title>Numpy: Introduction</title>
      <link>https://www.danielsobrado.com/blog/numpy-introduction/</link>
      <pubDate>Sun, 28 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/numpy-introduction/</guid>
      <description>Introduction Numpy is the core package for scientific computing, it has capabilities for fast processing of n-dimensional arrays and in general linear algebra.</description>
    </item>
    
    <item>
      <title>Let&#39;s discuss Microservices</title>
      <link>https://www.danielsobrado.com/blog/discuss-microservices/</link>
      <pubDate>Thu, 28 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/discuss-microservices/</guid>
      <description>Introduction Microservices are based on the principle &amp;ldquo;divide and conquer&amp;rdquo;, usually to achieve scalability both horizontally and vertically.</description>
    </item>
    
    <item>
      <title>The shared database problem</title>
      <link>https://www.danielsobrado.com/blog/shared-database/</link>
      <pubDate>Mon, 25 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/shared-database/</guid>
      <description>The Problem You&amp;rsquo;ve been asked to write a service that requires some information from one or multiple databases, accessing a database is easy, and writing some SQL is fast, I can do that!</description>
    </item>
    
    <item>
      <title>Applicative and Other Functional Concepts</title>
      <link>https://www.danielsobrado.com/blog/applicative-and-other-functional-concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/applicative-and-other-functional-concepts/</guid>
      <description>Applicative Functors Applicative functors, or simply applicatives, are a powerful concept in functional programming.</description>
    </item>
    
    <item>
      <title>Back-Pressure and Error Handling in Reactor</title>
      <link>https://www.danielsobrado.com/blog/back-pressure-and-error-handling-in-reactor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/back-pressure-and-error-handling-in-reactor/</guid>
      <description>Back-Pressure Back-pressure is a mechanism in reactive systems that allows the consumer of data to signal to the producer that it is unable to handle the current rate of data production.</description>
    </item>
    
    <item>
      <title>Building RESTful APIs with WebFlux</title>
      <link>https://www.danielsobrado.com/blog/building-restful-apis-with-webflux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/building-restful-apis-with-webflux/</guid>
      <description>Introduction to Spring WebFlux Spring WebFlux is part of the Spring Framework and provides support for reactive programming in web applications.</description>
    </item>
    
    <item>
      <title>Challenges of Concurrency</title>
      <link>https://www.danielsobrado.com/blog/challenges-of-concurrency/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/challenges-of-concurrency/</guid>
      <description>Race Conditions Race conditions occur when multiple threads access shared resources concurrently, and the final outcome depends on the relative timing of their execution.</description>
    </item>
    
    <item>
      <title>Concurrency and Memory Hierarchy</title>
      <link>https://www.danielsobrado.com/blog/concurrency-and-memory-hierarchy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/concurrency-and-memory-hierarchy/</guid>
      <description>Cache Coherence In modern computer systems, caches play a vital role in improving performance by reducing the latency of memory accesses.</description>
    </item>
    
    <item>
      <title>Concurrency in Modern Programming Languages</title>
      <link>https://www.danielsobrado.com/blog/concurrency-in-modern-programming-languages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/concurrency-in-modern-programming-languages/</guid>
      <description>Java Java provides built-in support for concurrency through the java.util.concurrent package.</description>
    </item>
    
    <item>
      <title>Currying in Java: Transforming Functions for Flexibility and Reusability</title>
      <link>https://www.danielsobrado.com/blog/currying/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/currying/</guid>
      <description>Introduction In functional programming, currying is a technique that transforms a function with multiple arguments into a sequence of functions, each taking a single argument.</description>
    </item>
    
    <item>
      <title>Fetch Operations in Concurrency</title>
      <link>https://www.danielsobrado.com/blog/fetch-operations-in-concurrency/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/fetch-operations-in-concurrency/</guid>
      <description>Atomic Fetch Operations Atomic fetch operations are a set of operations that combine reading a value from a shared variable and modifying it in a single, indivisible step.</description>
    </item>
    
    <item>
      <title>Functional Error Handling in Vavr</title>
      <link>https://www.danielsobrado.com/blog/functional-error-handling-in-vavr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/functional-error-handling-in-vavr/</guid>
      <description>The Problem with Exceptions Exceptions are the traditional way of handling errors in Java.</description>
    </item>
    
    <item>
      <title>Functional Programming Best Practices in Java</title>
      <link>https://www.danielsobrado.com/blog/functional-programming-best-practices-in-java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/functional-programming-best-practices-in-java/</guid>
      <description>1. Favor Immutability One of the core principles of functional programming is immutability.</description>
    </item>
    
    <item>
      <title>Functional programming in Java: Functional Interfaces</title>
      <link>https://www.danielsobrado.com/blog/functional-java-functional-interfaces/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/functional-java-functional-interfaces/</guid>
      <description>Introduction With Java 8, Oracle introduced functional programming in the language, this is achieved by using Functional Interfaces.</description>
    </item>
    
    <item>
      <title>Lambda Expressions</title>
      <link>https://www.danielsobrado.com/blog/functional-java-lambda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/functional-java-lambda/</guid>
      <description>What are Lambda Expressions? A lambda expression is a simple way to represent an anonymous function in Java.</description>
    </item>
    
    <item>
      <title>Spinlocks and Atomic Flags</title>
      <link>https://www.danielsobrado.com/blog/spinlocks-and-atomic-flags/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/spinlocks-and-atomic-flags/</guid>
      <description>Spinlocks A spinlock is a lock that causes a thread to wait in a loop while repeatedly checking if the lock is available.</description>
    </item>
    
    <item>
      <title>Task Parallelism and Data Parallelism</title>
      <link>https://www.danielsobrado.com/blog/task-parallelism-and-data-parallelism/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/task-parallelism-and-data-parallelism/</guid>
      <description>Task Parallelism Task parallelism, also known as function parallelism, focuses on distributing different tasks or functions across multiple threads or processors.</description>
    </item>
    
    <item>
      <title>Threads and Processes</title>
      <link>https://www.danielsobrado.com/blog/threads-and-processes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/threads-and-processes/</guid>
      <description>Definition of Threads and Processes Threads: The smallest unit of execution within a process.</description>
    </item>
    
    <item>
      <title>Using compare-and-swap (CAS) in Concurrency</title>
      <link>https://www.danielsobrado.com/blog/using-compare-and-swap-in-concurrency/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/using-compare-and-swap-in-concurrency/</guid>
      <description>What is Compare-and-Swap (CAS)? Compare-and-swap (CAS) is an atomic instruction that compares the contents of a memory location to a given value and, if they are equal, modifies the contents of that memory location to a new value.</description>
    </item>
    
    <item>
      <title>Volatile in Concurrency</title>
      <link>https://www.danielsobrado.com/blog/understanding-volatile-in-concurrency/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.danielsobrado.com/blog/understanding-volatile-in-concurrency/</guid>
      <description>What is Volatile? The volatile keyword is a qualifier that can be applied to variables in programming languages such as Java and C++.</description>
    </item>
    
  </channel>
</rss>
